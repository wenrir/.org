#+title: Sway
#+options: prop:t
#+startup: fold
#+include: ./secrets.org
#+include: ./config.org

* Display manager
** SDDM
A display manager, or login manager, is typically a graphical user interface that is displayed at the end of the boot process in place of the default shell.
* Sway
:PROPERTIES:
:header-args: :comments no :mkdirp yes :tangle ~/.config/sway/config :noweb tangle
:END:
** Keymappings
#+name: Modifier
#+begin_src conf
set $mod Mod4
#+end_src
#+name: Navigation
#+begin_src conf
set $left h
set $down j
set $up k
set $right l
#+end_src
** Terminal emulator
Using foot as default terminal.
#+name: foot
#+begin_src conf
set $term foot
#+end_src
*** Why foot (from repo)
- Fast (see benchmarks, and performance)
- Lightweight, in dependencies, on-disk and in-memory
- Wayland native
- DE agnostic
- Server/daemon mode
- User configurable font fallback
- On-the-fly font resize
- On-the-fly DPI font size adjustment
- Scrollback search
- Keyboard driven URL detection
- Color emoji support
- IME (via text-input-v3)
- Multi-seat
- True Color (24bpp)
- Synchronized Updates support
- Sixel image support

** Application launcher
*** Why not dmenu or rofi?
wiki.archlinux.org
#+begin_quote
dmenu, and rofi function relatively well in Sway, but all run under Xwayland and suffer from the same issue where they can become unresponsive if the cursor is moved to a native Wayland window. The reason for this issue is that Wayland clients/windows do not have access to input devices unless they have focus of the screen.
#+end_quote
*** bemenu
bemenu is a native Wayland dmenu replacement, but quite basic.
#+begin_src conf
#set $menu bemenu | xargs swaymsg exec --
#+end_src
**** Install
#+name: Install bemenu
#+begin_quote
pacman -S bemenu
#+end_quote

*** WOFI
**** Keybinds
#+begin_src conf
set $menu wofi --show drun
bindsym $mod+space exec $menu
#+end_src
**** style
[[org:../../../.org/sway/wofi.org][wofi config]]
** Apperance
*** Borders
#+name: Borders
#+begin_src conf
default_border none
default_floating_border none
font pango:monospace 0
titlebar_padding 1
titlebar_border_thickness 0
#+end_src
*** Corners
#+name: Corners
#+begin_src conf
smart_corner_radius enable
corner_radius 10
#+end_src
*** Blur
#+name: Blur
#+begin_src conf
blur enable
blur_xray off
blur_passes 3
blur_radius 2
#+end_src
**** Modules
#+name: Blur modules
#+begin_src conf
layer_effects "waybar" blur enable; shadows enable; corner_radius 10
layer_effects "bemenu" blur enable; shadows enable; corner_radius 5
#+end_src
*** Shadows
#+name: Shadows
#+begin_src conf
shadows enable
shadows_on_csd off
shadow_blur_radius 20
shadow_color #0000007F
#+end_src
*** Dim
#+name: Dim
#+begin_src conf
default_dim_inactive 0.5
dim_inactive_colors.unfocused #000000FF
dim_inactive_colors.urgent #900000FF
#+end_src

*** Scratchpad
#+name: Scratchpad
#+begin_src conf
scratchpad_minimize disable
#+end_src

*** Wallpaper
#+name: Wallpaper
#+begin_src conf
output * bg ~/.org/sway/images/wallpapers/mushroom.png fill
#+end_src
#+begin_comment
requires swaybg (pacman -S swaybg)
#+end_comment

*** Gaps
#+name: Gaps
#+begin_src conf
gaps inner 5
gaps outer 0
#+end_src
** Keybinds
Basic keybinds are nice.
*** Basics
#+begin_src conf
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#+end_src

*** Navigation
#+name: Basic navigation
#+begin_src conf
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+end_src

*** Workspaces
#+begin_src conf
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#+end_src
*** Layouts
Splitting objects, overriding.
#+name: Split
#+begin_src conf
bindsym $mod+b splith # Horizontal
bindsym $mod+v splitv # Vertical
#+end_src

#+name: Layout style toggle
#+begin_src conf
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
#+end_src

#+name: Fullscreen
#+begin_src conf
bindsym $mod+f fullscreen
#+end_src

#+name: Floating toggle
#+begin_src conf
bindsym $mod+Shift+space floating toggle
#+end_src

#+name: Toggle focus
#+begin_src conf
bindsym $mod+alt+space focus mode_toggle
#+end_src

#+name: Focus parent container
#+begin_src conf
bindsym $mod+a focus parent
#+end_src
*** Scratchpad
#+begin_src conf
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#+end_src

*** Capture screen

#+name: Screenshot
#+begin_src conf
bindsym $mod+Shift+S exec $HOME/.local/bin/capture-screen
#+end_src

*** Resize
#+begin_src conf
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#+end_src

*** Misc
#+begin_src conf
bindsym $mod+Shift+M exec $HOME/.local/bin/mac
#+end_src
** Bar
#+name: waybar
#+begin_src conf
bar {
    swaybar_command waybar
    position top
}
#+end_src

** Includes
#+name: includes
#+begin_src conf
include /etc/sway/config.d/*
#+end_src
** Cursor
#+name: hide cursor
#+begin_src conf
seat seat0 hide_cursor 3000
#+end_src

** Lock
#+name: swaylock
#+begin_src conf
set $sleep "swaylock \
    --screenshots \
    --clock \
    --indicator \
    --indicator-radius 100 \
    --indicator-thickness 7 \
    --effect-blur 7x5 \
    --effect-vignette 0.5:0.5 \
    --ring-color c678dd \
    --key-hl-color 6eaafb \
    --text-color abb2bf \
    --ring-ver-color 98c379 \
    --inside-ver-color 98c379 \
    --line-color 00000000 \
    --inside-color 282c34 \
    --separator-color 00000000 \
    --grace 5"

exec swayidle timeout 180 $sleep \
    timeout 300 'swaymsg "output * dpms off"' \
    timeout 60 'if pgrep -x swaylock; then swaymsg "output * dpms off"; fi' \
    resume 'swaymsg "output * dpms on"'


bindsym ctrl+alt+l exec $sleep
#+end_src

* Swaylock
#+begin_src sh
yay -S swaylock-effects
pacman -S swayidle
#+end_src
