#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '() :silent t))
(defpackage :ros.script.tangle.3912471334
  (:use :cl))
(in-package :ros.script.tangle.3912471334)
(defvar *config-files* (directory #P"*/*.org"))
(defvar *emacs-cmd* "emacs -Q --batch --eval")
(defmacro e-org-cmd (fn-name cmd)
  "Macro for creating a function that runs org command on file in emacs."
  `(defun ,fn-name (files)
     (progn
       (dolist (file files)
         (uiop:run-program (format nil "~a '(progn
          (setq make-backup-files nil)
            (with-current-buffer
              (find-file-noselect \"~a\")
              ( ~(~a~))))'" *emacs-cmd* file ,cmd) :output :string)))))

(e-org-cmd tangle-export-to-org 'org-org-export-to-org)
(e-org-cmd tangle-babel-tangle 'org-babel-tangle)

(defun delete-files (files)
  (dolist (file files)
    (let ((f (probe-file file)))
      (delete-file f))))

(defun main (&rest argv)
  (declare (ignorable argv))
  (tangle-export-to-org *config-files*)
  (tangle-babel-tangle (directory #P"*/*.org.org"))
  (delete-files (directory #P"*/*.org.org")))
;;; vim: set ft=lisp lisp:
